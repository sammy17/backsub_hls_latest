-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity backsub is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_EN_A : OUT STD_LOGIC;
    frame_WEN_A : OUT STD_LOGIC_VECTOR (1 downto 0);
    frame_Din_A : OUT STD_LOGIC_VECTOR (15 downto 0);
    frame_Dout_A : IN STD_LOGIC_VECTOR (15 downto 0);
    frame_Clk_A : OUT STD_LOGIC;
    frame_Rst_A : OUT STD_LOGIC;
    frame_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_EN_B : OUT STD_LOGIC;
    frame_WEN_B : OUT STD_LOGIC_VECTOR (1 downto 0);
    frame_Din_B : OUT STD_LOGIC_VECTOR (15 downto 0);
    frame_Dout_B : IN STD_LOGIC_VECTOR (15 downto 0);
    frame_Clk_B : OUT STD_LOGIC;
    frame_Rst_B : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of backsub is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "backsub,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.527500,HLS_SYN_LAT=76813,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=13,HLS_SYN_FF=2656,HLS_SYN_LUT=4875}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_pp0_stg1_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_pp1_stg0_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_pp1_stg1_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st30_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3DCCCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111101110011001100110011001101";
    constant ap_const_lv32_3E4CCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111110010011001100110011001101";
    constant ap_const_lv32_3F333333 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001100110011001100110011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv17_12C00 : STD_LOGIC_VECTOR (16 downto 0) := "10010110000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_24 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal init : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal backsub_CRTL_BUS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal i1_reg_218 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_reg_229 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_308_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg1_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_115 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal tmp_1_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_126 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_outStream_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppstg_reg_318_pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it9 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_reg_318_pp0_it10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp1_stg1_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_178 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal tmp_s_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_187 : BOOLEAN;
    signal init_read_read_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_206 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_824_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal frame_addr_2_reg_828 : STD_LOGIC_VECTOR (16 downto 0);
    signal frame_addr_3_reg_833 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_fu_345_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_2_reg_838 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_user_V_1_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_848 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_1_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_1_reg_858 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal pix_11_fu_351_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_11_reg_863 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it9 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_11_reg_863_pp0_it10 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_12_fu_355_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_12_reg_868 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_13_reg_873 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pix_22_fu_383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_22_reg_883 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_23_reg_888 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_3_fu_411_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_3_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_3_fu_415_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_3_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_943 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_953 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_973_pp0_it6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_973_pp0_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_35_reg_983_pp0_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_35_reg_983_pp0_it8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_reg_998 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_449_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1004 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_2_reg_1009 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_3_fu_467_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_3_reg_1015 : STD_LOGIC_VECTOR (22 downto 0);
    signal result_V_fu_562_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_V_reg_1020 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_1_reg_1025 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_3_fu_596_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_3_reg_1030 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_1_fu_721_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_1_reg_1036 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_496 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal tmp_user_V_reg_1047 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_1_fu_804_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_1_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_1_fu_809_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_1_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_814_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_1_reg_1077 : STD_LOGIC_VECTOR (16 downto 0);
    signal i1_phi_fu_222_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_phi_fu_233_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_4_fu_708_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_2_fu_750_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_fu_765_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_outStream_TREADY : STD_LOGIC := '0';
    signal frame_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_369_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_786_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal frame_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_397_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_795_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_241_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_334_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_s_fu_435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_471_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i_cast2_fu_482_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_485_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_i_fu_499_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_cast_fu_504_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_508_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_cast_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_cast_fu_520_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_i_fu_478_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1_i_i_fu_524_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_i_i_fu_528_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_45_fu_540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_fu_534_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_21_fu_548_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_552_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i1_cast1_fu_570_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_i1_fu_587_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i1_cast_fu_592_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_4_fu_611_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sh_assign_3_cast_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_3_cast_cast_fu_625_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_i1_fu_618_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1_i_i1_fu_628_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_i_i1_fu_632_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_49_fu_644_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i1_fu_638_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_36_fu_652_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_656_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_cast_fu_604_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_cast_fu_673_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_assign_fu_676_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i_fu_682_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i_fu_694_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_data_V_3_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_1_fu_666_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_cast_fu_607_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_cast_fu_717_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal abscond_i1_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i1_fu_727_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal abs_i1_fu_737_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_data_V_5_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_775_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_241_ce : STD_LOGIC;
    signal grp_fu_245_ce : STD_LOGIC;
    signal grp_fu_249_ce : STD_LOGIC;
    signal grp_fu_254_ce : STD_LOGIC;
    signal grp_fu_261_ce : STD_LOGIC;
    signal grp_fu_267_ce : STD_LOGIC;
    signal grp_fu_270_ce : STD_LOGIC;
    signal grp_fu_273_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st30_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1035 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component backsub_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component backsub_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        init : OUT STD_LOGIC );
    end component;



begin
    backsub_CRTL_BUS_s_axi_U : component backsub_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => backsub_CRTL_BUS_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_return,
        init => init);

    backsub_fadd_32ns_32ns_32_5_full_dsp_U1 : component backsub_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_241_p0,
        din1 => grp_fu_241_p1,
        ce => grp_fu_241_ce,
        dout => grp_fu_241_p2);

    backsub_fadd_32ns_32ns_32_5_full_dsp_U2 : component backsub_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_245_p0,
        din1 => grp_fu_245_p1,
        ce => grp_fu_245_ce,
        dout => grp_fu_245_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U3 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_249_p0,
        din1 => grp_fu_249_p1,
        ce => grp_fu_249_ce,
        dout => grp_fu_249_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U4 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_254_p0,
        din1 => grp_fu_254_p1,
        ce => grp_fu_254_ce,
        dout => grp_fu_254_p2);

    backsub_fmul_32ns_32ns_32_4_max_dsp_U5 : component backsub_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_261_p0,
        din1 => grp_fu_261_p1,
        ce => grp_fu_261_ce,
        dout => grp_fu_261_p2);

    backsub_sitofp_32ns_32_6_U6 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_267_p0,
        ce => grp_fu_267_ce,
        dout => grp_fu_267_p1);

    backsub_sitofp_32ns_32_6_U7 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_270_p0,
        ce => grp_fu_270_ce,
        dout => grp_fu_270_p1);

    backsub_sitofp_32ns_32_6_U8 : component backsub_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_273_p0,
        ce => grp_fu_273_ce,
        dout => grp_fu_273_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_outStream_TREADY assign process. --
    ap_reg_ioackin_outStream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))) or (not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)) and (ap_const_logic_1 = outStream_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_1 = outStream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)) and (ap_const_logic_1 = outStream_TREADY)) or (not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_1 = outStream_TREADY)))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and (ap_const_lv1_0 = tmp_1_fu_323_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = init_read_read_fu_130_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = init_read_read_fu_130_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (tmp_1_reg_824 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = init_read_read_fu_130_p2))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = tmp_s_fu_759_p2))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = init_read_read_fu_130_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)))))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = init_read_read_fu_130_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_lv1_0 = tmp_s_reg_1043) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i1_reg_218 assign process. --
    i1_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = init_read_read_fu_130_p2))) then 
                i1_reg_218 <= ap_const_lv17_0;
            elsif ((not((tmp_1_reg_824 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                i1_reg_218 <= i_2_reg_838;
            end if; 
        end if;
    end process;

    -- i_reg_229 assign process. --
    i_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = init_read_read_fu_130_p2)))) then 
                i_reg_229 <= ap_const_lv17_0;
            elsif ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then 
                i_reg_229 <= i_1_reg_1077;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then
                ap_reg_ppstg_pix_11_reg_863_pp0_it1 <= pix_11_reg_863;
                ap_reg_ppstg_pix_11_reg_863_pp0_it10 <= ap_reg_ppstg_pix_11_reg_863_pp0_it9;
                ap_reg_ppstg_pix_11_reg_863_pp0_it2 <= ap_reg_ppstg_pix_11_reg_863_pp0_it1;
                ap_reg_ppstg_pix_11_reg_863_pp0_it3 <= ap_reg_ppstg_pix_11_reg_863_pp0_it2;
                ap_reg_ppstg_pix_11_reg_863_pp0_it4 <= ap_reg_ppstg_pix_11_reg_863_pp0_it3;
                ap_reg_ppstg_pix_11_reg_863_pp0_it5 <= ap_reg_ppstg_pix_11_reg_863_pp0_it4;
                ap_reg_ppstg_pix_11_reg_863_pp0_it6 <= ap_reg_ppstg_pix_11_reg_863_pp0_it5;
                ap_reg_ppstg_pix_11_reg_863_pp0_it7 <= ap_reg_ppstg_pix_11_reg_863_pp0_it6;
                ap_reg_ppstg_pix_11_reg_863_pp0_it8 <= ap_reg_ppstg_pix_11_reg_863_pp0_it7;
                ap_reg_ppstg_pix_11_reg_863_pp0_it9 <= ap_reg_ppstg_pix_11_reg_863_pp0_it8;
                ap_reg_ppstg_reg_318_pp0_it1 <= reg_318;
                ap_reg_ppstg_reg_318_pp0_it10 <= ap_reg_ppstg_reg_318_pp0_it9;
                ap_reg_ppstg_reg_318_pp0_it2 <= ap_reg_ppstg_reg_318_pp0_it1;
                ap_reg_ppstg_reg_318_pp0_it3 <= ap_reg_ppstg_reg_318_pp0_it2;
                ap_reg_ppstg_reg_318_pp0_it4 <= ap_reg_ppstg_reg_318_pp0_it3;
                ap_reg_ppstg_reg_318_pp0_it5 <= ap_reg_ppstg_reg_318_pp0_it4;
                ap_reg_ppstg_reg_318_pp0_it6 <= ap_reg_ppstg_reg_318_pp0_it5;
                ap_reg_ppstg_reg_318_pp0_it7 <= ap_reg_ppstg_reg_318_pp0_it6;
                ap_reg_ppstg_reg_318_pp0_it8 <= ap_reg_ppstg_reg_318_pp0_it7;
                ap_reg_ppstg_reg_318_pp0_it9 <= ap_reg_ppstg_reg_318_pp0_it8;
                ap_reg_ppstg_tmp_20_reg_973_pp0_it6 <= tmp_20_reg_973;
                ap_reg_ppstg_tmp_20_reg_973_pp0_it7 <= ap_reg_ppstg_tmp_20_reg_973_pp0_it6;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it1 <= tmp_dest_V_1_reg_858;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it10 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it9;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it11 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it10;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it2 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it1;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it3 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it2;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it4 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it3;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it5 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it4;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it6 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it5;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it7 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it6;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it8 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it7;
                ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it9 <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it8;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it1 <= tmp_id_V_1_reg_853;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it10 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it9;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it11 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it10;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it2 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it1;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it3 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it2;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it4 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it3;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it5 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it4;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it6 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it5;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it7 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it6;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it8 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it7;
                ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it9 <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it8;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it1 <= tmp_keep_V_3_reg_898;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it10 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it9;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it11 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it10;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it2 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it1;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it3 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it2;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it4 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it3;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it5 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it4;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it6 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it5;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it7 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it6;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it8 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it7;
                ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it9 <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it8;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it1 <= tmp_last_V_1_reg_848;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it10 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it9;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it11 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it10;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it2 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it1;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it3 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it2;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it4 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it3;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it5 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it4;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it6 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it5;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it7 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it6;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it8 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it7;
                ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it9 <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it8;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it1 <= tmp_strb_V_3_reg_903;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it10 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it9;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it11 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it10;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it2 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it1;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it3 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it2;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it4 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it3;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it5 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it4;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it6 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it5;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it7 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it6;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it8 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it7;
                ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it9 <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it8;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it1 <= tmp_user_V_1_reg_843;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it10 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it9;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it11 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it10;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it2 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it1;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it3 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it2;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it4 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it3;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it5 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it4;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it6 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it5;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it7 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it6;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it8 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it7;
                ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it9 <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                ap_reg_ppstg_tmp_1_reg_824_pp0_it1 <= tmp_1_reg_824;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it10 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it9;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it11 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it10;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it2 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it1;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it3 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it2;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it4 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it3;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it5 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it4;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it6 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it5;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it7 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it6;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it8 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it7;
                ap_reg_ppstg_tmp_1_reg_824_pp0_it9 <= ap_reg_ppstg_tmp_1_reg_824_pp0_it8;
                ap_reg_ppstg_tmp_35_reg_983_pp0_it7 <= tmp_35_reg_983;
                ap_reg_ppstg_tmp_35_reg_983_pp0_it8 <= ap_reg_ppstg_tmp_35_reg_983_pp0_it7;
                tmp_1_reg_824 <= tmp_1_fu_323_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = tmp_1_fu_323_p2)))) then
                frame_addr_2_reg_828 <= tmp_9_fu_329_p1(17 - 1 downto 0);
                    frame_addr_3_reg_833(16 downto 1) <= tmp_24_fu_340_p1(17 - 1 downto 0)(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)))))))) then
                i_1_reg_1077 <= i_1_fu_814_p2;
                tmp_dest_V_reg_1062 <= inStream_TDEST;
                tmp_id_V_reg_1057 <= inStream_TID;
                tmp_last_V_reg_1052 <= inStream_TLAST;
                tmp_user_V_reg_1047 <= inStream_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = tmp_1_fu_323_p2)))) then
                i_2_reg_838 <= i_2_fu_345_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it10)))) then
                isNeg_1_reg_1025 <= sh_assign_2_fu_573_p2(8 downto 8);
                result_V_reg_1020 <= result_V_fu_562_p3;
                sh_assign_3_reg_1030 <= sh_assign_3_fu_596_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it10)))) then
                loc_V_1_reg_1004 <= loc_V_1_fu_449_p1;
                loc_V_2_reg_1009 <= p_Val2_4_fu_453_p1(30 downto 23);
                loc_V_3_reg_1015 <= loc_V_3_fu_467_p1;
                loc_V_reg_998 <= p_Val2_s_fu_435_p1(30 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then
                pix_11_reg_863 <= pix_11_fu_351_p1;
                pix_12_reg_868 <= pix_12_fu_355_p1;
                pix_13_reg_873 <= frame_Dout_A(15 downto 8);
                pix_22_reg_883 <= pix_22_fu_383_p1;
                pix_23_reg_888 <= frame_Dout_B(15 downto 8);
                tmp_keep_V_3_reg_898 <= tmp_keep_V_3_fu_411_p1;
                tmp_strb_V_3_reg_903 <= tmp_strb_V_3_fu_415_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))))) then
                reg_318 <= inStream_TDATA(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it2)))) then
                tmp_12_reg_928 <= grp_fu_267_p1;
                tmp_27_reg_933 <= grp_fu_270_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it4)))) then
                tmp_13_reg_958 <= grp_fu_249_p2;
                tmp_28_reg_963 <= grp_fu_254_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it3)))) then
                tmp_15_reg_938 <= grp_fu_267_p1;
                tmp_19_reg_943 <= grp_fu_270_p1;
                tmp_30_reg_948 <= grp_fu_273_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it5)))) then
                tmp_16_reg_968 <= grp_fu_249_p2;
                tmp_20_reg_973 <= grp_fu_254_p2;
                tmp_31_reg_978 <= grp_fu_261_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it7)))) then
                tmp_17_reg_988 <= grp_fu_241_p2;
                tmp_32_reg_993 <= grp_fu_245_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it3)))) then
                tmp_34_reg_953 <= grp_fu_273_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it5)))) then
                tmp_35_reg_983 <= grp_fu_261_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then
                tmp_dest_V_1_reg_858 <= inStream_TDEST;
                tmp_id_V_1_reg_853 <= inStream_TID;
                tmp_last_V_1_reg_848 <= inStream_TLAST;
                tmp_user_V_1_reg_843 <= inStream_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)))))))) then
                tmp_keep_V_1_reg_1067 <= tmp_keep_V_1_fu_804_p1;
                tmp_strb_V_1_reg_1072 <= tmp_strb_V_1_fu_809_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                tmp_s_reg_1043 <= tmp_s_fu_759_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))))) then
                x_assign_1_reg_1036 <= x_assign_1_fu_721_p2;
            end if;
        end if;
    end process;
    frame_addr_3_reg_833(0) <= '1';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, init_read_read_fu_130_p2, tmp_1_fu_323_p2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, tmp_s_fu_759_p2, ap_reg_ppiten_pp1_it1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if ((not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = init_read_read_fu_130_p2)))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                elsif ((not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = init_read_read_fu_130_p2))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not(((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and (ap_const_lv1_0 = tmp_1_fu_323_p2) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) and (ap_const_lv1_0 = tmp_1_fu_323_p2) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st30_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp0_stg1_fsm_2 => 
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                end if;
            when ap_ST_pp1_stg0_fsm_3 => 
                if ((not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = tmp_s_fu_759_p2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_4;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) and (ap_const_lv1_0 = tmp_s_fu_759_p2))) then
                    ap_NS_fsm <= ap_ST_st30_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                end if;
            when ap_ST_pp1_stg1_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_4;
                end if;
            when ap_ST_st30_fsm_5 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    abs_i1_fu_737_p3 <= 
        x_assign_1_reg_1036 when (abscond_i1_fu_732_p2(0) = '1') else 
        neg_i1_fu_727_p2;
    abs_i_fu_694_p3 <= 
        x_assign_fu_676_p2 when (abscond_i_fu_688_p2(0) = '1') else 
        neg_i_fu_682_p2;
    abscond_i1_fu_732_p2 <= "1" when (signed(x_assign_1_reg_1036) > signed(ap_const_lv9_0)) else "0";
    abscond_i_fu_688_p2 <= "1" when (signed(x_assign_fu_676_p2) > signed(ap_const_lv9_0)) else "0";

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st30_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st30_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_1035 assign process. --
    ap_sig_bdd_1035_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1035 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_115 assign process. --
    ap_sig_bdd_115_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_115 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_126 assign process. --
    ap_sig_bdd_126_assign_proc : process(inStream_TVALID, tmp_1_reg_824)
    begin
                ap_sig_bdd_126 <= ((inStream_TVALID = ap_const_logic_0) and not((tmp_1_reg_824 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_178 assign process. --
    ap_sig_bdd_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_178 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_187 assign process. --
    ap_sig_bdd_187_assign_proc : process(inStream_TVALID, tmp_s_reg_1043)
    begin
                ap_sig_bdd_187 <= ((inStream_TVALID = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_s_reg_1043)));
    end process;


    -- ap_sig_bdd_206 assign process. --
    ap_sig_bdd_206_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_206 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_24 assign process. --
    ap_sig_bdd_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_496 assign process. --
    ap_sig_bdd_496_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_496 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_206)
    begin
        if (ap_sig_bdd_206) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg1_fsm_2_assign_proc : process(ap_sig_bdd_115)
    begin
        if (ap_sig_bdd_115) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_3 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_3_assign_proc : process(ap_sig_bdd_496)
    begin
        if (ap_sig_bdd_496) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg1_fsm_4 assign process. --
    ap_sig_cseq_ST_pp1_stg1_fsm_4_assign_proc : process(ap_sig_bdd_178)
    begin
        if (ap_sig_bdd_178) then 
            ap_sig_cseq_ST_pp1_stg1_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg1_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_24)
    begin
        if (ap_sig_bdd_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st30_fsm_5 assign process. --
    ap_sig_cseq_ST_st30_fsm_5_assign_proc : process(ap_sig_bdd_1035)
    begin
        if (ap_sig_bdd_1035) then 
            ap_sig_cseq_ST_st30_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_outStream_TREADY assign process. --
    ap_sig_ioackin_outStream_TREADY_assign_proc : process(outStream_TREADY, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) then 
            ap_sig_ioackin_outStream_TREADY <= outStream_TREADY;
        else 
            ap_sig_ioackin_outStream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    backsub_CRTL_BUS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    frame_Addr_A <= std_logic_vector(shift_left(unsigned(frame_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));

    -- frame_Addr_A_orig assign process. --
    frame_Addr_A_orig_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp0_stg0_fsm_1, frame_addr_2_reg_828, tmp_9_fu_329_p1, tmp_3_fu_770_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Addr_A_orig <= tmp_3_fu_770_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            frame_Addr_A_orig <= std_logic_vector(resize(unsigned(frame_addr_2_reg_828),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            frame_Addr_A_orig <= tmp_9_fu_329_p1(32 - 1 downto 0);
        else 
            frame_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_Addr_B <= std_logic_vector(shift_left(unsigned(frame_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));

    -- frame_Addr_B_orig assign process. --
    frame_Addr_B_orig_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_pp0_stg0_fsm_1, frame_addr_3_reg_833, tmp_24_fu_340_p1, tmp_5_fu_781_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Addr_B_orig <= tmp_5_fu_781_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            frame_Addr_B_orig <= std_logic_vector(resize(unsigned(frame_addr_3_reg_833),32));
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            frame_Addr_B_orig <= tmp_24_fu_340_p1(32 - 1 downto 0);
        else 
            frame_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_Clk_A <= ap_clk;
    frame_Clk_B <= ap_clk;

    -- frame_Din_A assign process. --
    frame_Din_A_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_10_fu_369_p3, tmp_6_fu_786_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Din_A <= tmp_6_fu_786_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            frame_Din_A <= tmp_10_fu_369_p3;
        else 
            frame_Din_A <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- frame_Din_B assign process. --
    frame_Din_B_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_25_fu_397_p3, tmp_7_fu_795_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            frame_Din_B <= tmp_7_fu_795_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            frame_Din_B <= tmp_25_fu_397_p3;
        else 
            frame_Din_B <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- frame_EN_A assign process. --
    frame_EN_A_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            frame_EN_A <= ap_const_logic_1;
        else 
            frame_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    -- frame_EN_B assign process. --
    frame_EN_B_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            frame_EN_B <= ap_const_logic_1;
        else 
            frame_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    frame_Rst_A <= ap_rst_n_inv;
    frame_Rst_B <= ap_rst_n_inv;

    -- frame_WEN_A assign process. --
    frame_WEN_A_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, tmp_1_reg_824, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))))) then 
            frame_WEN_A <= ap_const_lv2_3;
        else 
            frame_WEN_A <= ap_const_lv2_0;
        end if; 
    end process;


    -- frame_WEN_B assign process. --
    frame_WEN_B_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, tmp_1_reg_824, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))))) then 
            frame_WEN_B <= ap_const_lv2_3;
        else 
            frame_WEN_B <= ap_const_lv2_0;
        end if; 
    end process;


    -- grp_fu_241_ce assign process. --
    grp_fu_241_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_241_ce <= ap_const_logic_1;
        else 
            grp_fu_241_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_241_p0 assign process. --
    grp_fu_241_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it8, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_13_reg_958, tmp_17_reg_988)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) then 
            grp_fu_241_p0 <= tmp_17_reg_988;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_241_p0 <= tmp_13_reg_958;
        else 
            grp_fu_241_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_241_p1 assign process. --
    grp_fu_241_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it8, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_16_reg_968, ap_reg_ppstg_tmp_20_reg_973_pp0_it7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) then 
            grp_fu_241_p1 <= ap_reg_ppstg_tmp_20_reg_973_pp0_it7;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_241_p1 <= tmp_16_reg_968;
        else 
            grp_fu_241_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_245_ce assign process. --
    grp_fu_245_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_245_ce <= ap_const_logic_1;
        else 
            grp_fu_245_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_245_p0 assign process. --
    grp_fu_245_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it8, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_28_reg_963, tmp_32_reg_993)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) then 
            grp_fu_245_p0 <= tmp_32_reg_993;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_245_p0 <= tmp_28_reg_963;
        else 
            grp_fu_245_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_245_p1 assign process. --
    grp_fu_245_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it8, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_31_reg_978, ap_reg_ppstg_tmp_35_reg_983_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) then 
            grp_fu_245_p1 <= ap_reg_ppstg_tmp_35_reg_983_pp0_it8;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_245_p1 <= tmp_31_reg_978;
        else 
            grp_fu_245_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_249_ce assign process. --
    grp_fu_249_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_249_ce <= ap_const_logic_1;
        else 
            grp_fu_249_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_249_p0 assign process. --
    grp_fu_249_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_12_reg_928, tmp_15_reg_938)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_249_p0 <= tmp_15_reg_938;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_249_p0 <= tmp_12_reg_928;
        else 
            grp_fu_249_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_249_p1 assign process. --
    grp_fu_249_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_249_p1 <= ap_const_lv32_3E4CCCCD;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_249_p1 <= ap_const_lv32_3DCCCCCD;
        else 
            grp_fu_249_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_254_ce assign process. --
    grp_fu_254_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_254_ce <= ap_const_logic_1;
        else 
            grp_fu_254_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_254_p0 assign process. --
    grp_fu_254_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_27_reg_933, tmp_19_reg_943)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_254_p0 <= tmp_19_reg_943;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_254_p0 <= tmp_27_reg_933;
        else 
            grp_fu_254_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_254_p1 assign process. --
    grp_fu_254_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_254_p1 <= ap_const_lv32_3F333333;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
            grp_fu_254_p1 <= ap_const_lv32_3DCCCCCD;
        else 
            grp_fu_254_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_261_ce assign process. --
    grp_fu_261_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_261_ce <= ap_const_logic_1;
        else 
            grp_fu_261_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_261_p0 assign process. --
    grp_fu_261_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_30_reg_948, tmp_34_reg_953)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                grp_fu_261_p0 <= tmp_34_reg_953;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                grp_fu_261_p0 <= tmp_30_reg_948;
            else 
                grp_fu_261_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_261_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_261_p1 assign process. --
    grp_fu_261_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                grp_fu_261_p1 <= ap_const_lv32_3F333333;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                grp_fu_261_p1 <= ap_const_lv32_3E4CCCCD;
            else 
                grp_fu_261_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_261_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_267_ce assign process. --
    grp_fu_267_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_267_ce <= ap_const_logic_1;
        else 
            grp_fu_267_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_267_p0 assign process. --
    grp_fu_267_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_11_fu_378_p1, tmp_14_fu_419_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_267_p0 <= tmp_14_fu_419_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_267_p0 <= tmp_11_fu_378_p1;
        else 
            grp_fu_267_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_270_ce assign process. --
    grp_fu_270_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_270_ce <= ap_const_logic_1;
        else 
            grp_fu_270_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_270_p0 assign process. --
    grp_fu_270_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_26_fu_406_p1, tmp_18_fu_423_p1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            grp_fu_270_p0 <= tmp_18_fu_423_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_270_p0 <= tmp_26_fu_406_p1;
        else 
            grp_fu_270_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_fu_273_ce assign process. --
    grp_fu_273_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_273_ce <= ap_const_logic_1;
        else 
            grp_fu_273_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_273_p0 assign process. --
    grp_fu_273_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_29_fu_427_p1, tmp_33_fu_431_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                grp_fu_273_p0 <= tmp_33_fu_431_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                grp_fu_273_p0 <= tmp_29_fu_427_p1;
            else 
                grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_308_p4 <= inStream_TDATA(23 downto 16);

    -- i1_phi_fu_222_p4 assign process. --
    i1_phi_fu_222_p4_assign_proc : process(i1_reg_218, tmp_1_reg_824, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_1, i_2_reg_838)
    begin
        if ((not((tmp_1_reg_824 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            i1_phi_fu_222_p4 <= i_2_reg_838;
        else 
            i1_phi_fu_222_p4 <= i1_reg_218;
        end if; 
    end process;

    i_1_fu_814_p2 <= std_logic_vector(unsigned(ap_const_lv17_2) + unsigned(i_reg_229));
    i_2_fu_345_p2 <= std_logic_vector(unsigned(ap_const_lv17_2) + unsigned(i1_phi_fu_222_p4));

    -- i_phi_fu_233_p4 assign process. --
    i_phi_fu_233_p4_assign_proc : process(i_reg_229, tmp_s_reg_1043, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, i_1_reg_1077)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            i_phi_fu_233_p4 <= i_1_reg_1077;
        else 
            i_phi_fu_233_p4 <= i_reg_229;
        end if; 
    end process;


    -- inStream_TREADY assign process. --
    inStream_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, tmp_1_reg_824, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((tmp_1_reg_824 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_sig_bdd_187 or ((ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and not((ap_const_lv1_0 = tmp_s_reg_1043))))))))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    init_read_read_fu_130_p2 <= (0=>init, others=>'-');
    isNeg_1_fu_579_p3 <= sh_assign_2_fu_573_p2(8 downto 8);
    isNeg_fu_491_p3 <= sh_assign_fu_485_p2(8 downto 8);
    loc_V_1_fu_449_p1 <= p_Val2_s_fu_435_p1(23 - 1 downto 0);
    loc_V_3_fu_467_p1 <= p_Val2_4_fu_453_p1(23 - 1 downto 0);
    neg_i1_fu_727_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_1_reg_1036));
    neg_i_fu_682_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(x_assign_fu_676_p2));

    -- outStream_TDATA assign process. --
    outStream_TDATA_assign_proc : process(reg_318, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_data_V_4_fu_708_p3, tmp_data_V_2_fu_750_p3, tmp_data_V_fu_765_p1)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TDATA <= reg_318;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TDATA <= tmp_data_V_fu_765_p1;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TDATA <= tmp_data_V_2_fu_750_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TDATA <= tmp_data_V_4_fu_708_p3;
        else 
            outStream_TDATA <= "XXXXXXXX";
        end if; 
    end process;


    -- outStream_TDEST assign process. --
    outStream_TDEST_assign_proc : process(inStream_TDEST, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it10, ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_dest_V_reg_1062)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TDEST <= tmp_dest_V_reg_1062;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TDEST <= inStream_TDEST;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TDEST <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TDEST <= ap_reg_ppstg_tmp_dest_V_1_reg_858_pp0_it10;
        else 
            outStream_TDEST <= "X";
        end if; 
    end process;


    -- outStream_TID assign process. --
    outStream_TID_assign_proc : process(inStream_TID, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it10, ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_id_V_reg_1057)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TID <= tmp_id_V_reg_1057;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TID <= inStream_TID;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TID <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TID <= ap_reg_ppstg_tmp_id_V_1_reg_853_pp0_it10;
        else 
            outStream_TID <= "X";
        end if; 
    end process;


    -- outStream_TKEEP assign process. --
    outStream_TKEEP_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it10, ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_keep_V_1_fu_804_p1, tmp_keep_V_1_reg_1067)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TKEEP <= tmp_keep_V_1_reg_1067;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TKEEP <= tmp_keep_V_1_fu_804_p1;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TKEEP <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TKEEP <= ap_reg_ppstg_tmp_keep_V_3_reg_898_pp0_it10;
        else 
            outStream_TKEEP <= "X";
        end if; 
    end process;


    -- outStream_TLAST assign process. --
    outStream_TLAST_assign_proc : process(inStream_TLAST, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it10, ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_last_V_reg_1052)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TLAST <= tmp_last_V_reg_1052;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TLAST <= inStream_TLAST;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TLAST <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TLAST <= ap_reg_ppstg_tmp_last_V_1_reg_848_pp0_it10;
        else 
            outStream_TLAST <= "X";
        end if; 
    end process;


    -- outStream_TSTRB assign process. --
    outStream_TSTRB_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it10, ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_strb_V_1_fu_809_p1, tmp_strb_V_1_reg_1072)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TSTRB <= tmp_strb_V_1_reg_1072;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TSTRB <= tmp_strb_V_1_fu_809_p1;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TSTRB <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TSTRB <= ap_reg_ppstg_tmp_strb_V_3_reg_903_pp0_it10;
        else 
            outStream_TSTRB <= "X";
        end if; 
    end process;


    -- outStream_TUSER assign process. --
    outStream_TUSER_assign_proc : process(inStream_TUSER, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it10, ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it11, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, tmp_user_V_reg_1047)
    begin
        if ((not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            outStream_TUSER <= tmp_user_V_reg_1047;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)))) then 
            outStream_TUSER <= inStream_TUSER;
        elsif ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))) then 
            outStream_TUSER <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it11;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)))) then 
            outStream_TUSER <= ap_reg_ppstg_tmp_user_V_1_reg_843_pp0_it10;
        else 
            outStream_TUSER <= "X";
        end if; 
    end process;


    -- outStream_TVALID assign process. --
    outStream_TVALID_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_126, ap_reg_ppstg_tmp_1_reg_824_pp0_it11, ap_reg_ppiten_pp0_it11, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_reg_1043, ap_sig_bdd_187, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it12, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it1, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_126)) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_824_pp0_it11)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = tmp_s_reg_1043)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_bdd_187)) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) or (not((ap_const_lv1_0 = tmp_s_reg_1043)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_4_fu_611_p3 <= (ap_const_lv1_1 & loc_V_3_reg_1015);
    p_Result_s_fu_471_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1004);
    p_Val2_4_fu_453_p1 <= grp_fu_245_p2;
    p_Val2_s_fu_435_p1 <= grp_fu_241_p2;
    pix_11_fu_351_p1 <= inStream_TDATA(8 - 1 downto 0);
    pix_12_fu_355_p1 <= frame_Dout_A(8 - 1 downto 0);
    pix_22_fu_383_p1 <= frame_Dout_B(8 - 1 downto 0);
    result_V_1_fu_666_p3 <= 
        tmp_36_fu_652_p1 when (isNeg_1_reg_1025(0) = '1') else 
        tmp_37_fu_656_p4;
    result_V_fu_562_p3 <= 
        tmp_21_fu_548_p1 when (isNeg_fu_491_p3(0) = '1') else 
        tmp_22_fu_552_p4;
        sh_assign_1_cast_cast_fu_520_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_508_p3),24));

        sh_assign_1_cast_fu_516_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_508_p3),32));

    sh_assign_1_fu_508_p3 <= 
        tmp_i_i_cast_fu_504_p1 when (isNeg_fu_491_p3(0) = '1') else 
        sh_assign_fu_485_p2;
    sh_assign_2_fu_573_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i1_cast1_fu_570_p1));
        sh_assign_3_cast_cast_fu_625_p1 <= std_logic_vector(resize(signed(sh_assign_3_reg_1030),24));

        sh_assign_3_cast_fu_622_p1 <= std_logic_vector(resize(signed(sh_assign_3_reg_1030),32));

    sh_assign_3_fu_596_p3 <= 
        tmp_i_i1_cast_fu_592_p1 when (isNeg_1_fu_579_p3(0) = '1') else 
        sh_assign_2_fu_573_p2;
    sh_assign_fu_485_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_cast2_fu_482_p1));
    tmp_10_fu_369_p3 <= (pix_12_fu_355_p1 & pix_11_fu_351_p1);
    tmp_11_fu_378_p1 <= std_logic_vector(resize(unsigned(pix_11_fu_351_p1),32));
    tmp_12_cast_fu_604_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_11_reg_863_pp0_it10),9));
    tmp_14_fu_419_p1 <= std_logic_vector(resize(unsigned(pix_12_reg_868),32));
    tmp_18_fu_423_p1 <= std_logic_vector(resize(unsigned(pix_13_reg_873),32));
    tmp_1_fu_323_p2 <= "1" when (unsigned(i1_phi_fu_222_p4) < unsigned(ap_const_lv17_12C00)) else "0";
    tmp_1_i_i1_fu_628_p1 <= std_logic_vector(resize(unsigned(sh_assign_3_cast_fu_622_p1),54));
    tmp_1_i_i_fu_524_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_516_p1),54));
    tmp_21_fu_548_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_540_p3),8));
    tmp_22_fu_552_p4 <= tmp_4_i_i_fu_534_p2(30 downto 23);
    tmp_23_fu_334_p2 <= (i1_phi_fu_222_p4 or ap_const_lv17_1);
    tmp_24_fu_340_p1 <= std_logic_vector(resize(unsigned(tmp_23_fu_334_p2),64));
    tmp_25_fu_397_p3 <= (pix_22_fu_383_p1 & grp_fu_308_p4);
    tmp_26_fu_406_p1 <= std_logic_vector(resize(unsigned(grp_fu_308_p4),32));
    tmp_27_cast_fu_607_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_reg_318_pp0_it10),9));
    tmp_29_fu_427_p1 <= std_logic_vector(resize(unsigned(pix_22_reg_883),32));
    tmp_2_i_i1_fu_632_p2 <= std_logic_vector(shift_right(unsigned(p_Result_4_fu_611_p3),to_integer(unsigned('0' & sh_assign_3_cast_cast_fu_625_p1(24-1 downto 0)))));
    tmp_2_i_i_fu_528_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_fu_471_p3),to_integer(unsigned('0' & sh_assign_1_cast_cast_fu_520_p1(24-1 downto 0)))));
    tmp_33_fu_431_p1 <= std_logic_vector(resize(unsigned(pix_23_reg_888),32));
    tmp_36_fu_652_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_644_p3),8));
    tmp_37_fu_656_p4 <= tmp_4_i_i1_fu_638_p2(30 downto 23);
    tmp_38_cast_fu_673_p1 <= std_logic_vector(resize(unsigned(result_V_reg_1020),9));
    tmp_3_fu_770_p1 <= std_logic_vector(resize(unsigned(i_reg_229),64));
    tmp_41_cast_fu_717_p1 <= std_logic_vector(resize(unsigned(result_V_1_fu_666_p3),9));
    tmp_45_fu_540_p3 <= tmp_2_i_i_fu_528_p2(23 downto 23);
    tmp_49_fu_644_p3 <= tmp_2_i_i1_fu_632_p2(23 downto 23);
    tmp_4_fu_775_p2 <= (i_reg_229 or ap_const_lv17_1);
    tmp_4_i_i1_fu_638_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_i_i1_fu_618_p1),to_integer(unsigned('0' & tmp_1_i_i1_fu_628_p1(31-1 downto 0)))));
    tmp_4_i_i_fu_534_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_i_i_fu_478_p1),to_integer(unsigned('0' & tmp_1_i_i_fu_524_p1(31-1 downto 0)))));
    tmp_5_fu_781_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_775_p2),64));
    tmp_6_fu_786_p3 <= (tmp_data_V_fu_765_p1 & tmp_data_V_fu_765_p1);
    tmp_7_fu_795_p3 <= (grp_fu_308_p4 & grp_fu_308_p4);
    tmp_8_i_i1_fu_618_p1 <= std_logic_vector(resize(unsigned(p_Result_4_fu_611_p3),54));
    tmp_8_i_i_fu_478_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_471_p3),54));
    tmp_9_fu_329_p1 <= std_logic_vector(resize(unsigned(i1_phi_fu_222_p4),64));
    tmp_data_V_2_fu_750_p3 <= 
        ap_const_lv8_FF when (tmp_data_V_5_fu_744_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_data_V_3_fu_702_p2 <= "1" when (signed(abs_i_fu_694_p3) > signed(ap_const_lv9_E)) else "0";
    tmp_data_V_4_fu_708_p3 <= 
        ap_const_lv8_FF when (tmp_data_V_3_fu_702_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_data_V_5_fu_744_p2 <= "1" when (signed(abs_i1_fu_737_p3) > signed(ap_const_lv9_E)) else "0";
    tmp_data_V_fu_765_p1 <= inStream_TDATA(8 - 1 downto 0);
        tmp_i_i1_cast_fu_592_p1 <= std_logic_vector(resize(signed(tmp_i_i1_fu_587_p2),9));

    tmp_i_i1_fu_587_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_2_reg_1009));
        tmp_i_i_cast_fu_504_p1 <= std_logic_vector(resize(signed(tmp_i_i_fu_499_p2),9));

    tmp_i_i_fu_499_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_reg_998));
    tmp_i_i_i1_cast1_fu_570_p1 <= std_logic_vector(resize(unsigned(loc_V_2_reg_1009),9));
    tmp_i_i_i_cast2_fu_482_p1 <= std_logic_vector(resize(unsigned(loc_V_reg_998),9));
    tmp_keep_V_1_fu_804_p1 <= inStream_TKEEP(1 - 1 downto 0);
    tmp_keep_V_3_fu_411_p1 <= inStream_TKEEP(1 - 1 downto 0);
    tmp_s_fu_759_p2 <= "1" when (unsigned(i_phi_fu_233_p4) < unsigned(ap_const_lv17_12C00)) else "0";
    tmp_strb_V_1_fu_809_p1 <= inStream_TSTRB(1 - 1 downto 0);
    tmp_strb_V_3_fu_415_p1 <= inStream_TSTRB(1 - 1 downto 0);
    x_assign_1_fu_721_p2 <= std_logic_vector(unsigned(tmp_27_cast_fu_607_p1) - unsigned(tmp_41_cast_fu_717_p1));
    x_assign_fu_676_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_604_p1) - unsigned(tmp_38_cast_fu_673_p1));
end behav;
